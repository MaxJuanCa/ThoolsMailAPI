{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Juan\\\\Desktop\\\\Proyectos\\\\Thools\\\\ThoolsMailAPI\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nexport default (function () {\n  var _useState = useState({\n    submitted: false,\n    submitting: false,\n    info: {\n      error: false,\n      msg: null\n    }\n  }),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  var _useState2 = useState({\n    email: '',\n    message: ''\n  }),\n      inputs = _useState2[0],\n      setInputs = _useState2[1];\n\n  var handleResponse = function handleResponse(status, msg) {\n    if (status === 200) {\n      setStatus({\n        submitted: true,\n        submitting: false,\n        info: {\n          error: false,\n          msg: msg\n        }\n      });\n      setInputs({\n        email: '',\n        message: ''\n      });\n    } else {\n      setStatus({\n        info: {\n          error: true,\n          msg: msg\n        }\n      });\n    }\n  };\n\n  var handleOnChange = function handleOnChange(e) {\n    e.persist();\n    setInputs(function (prev) {\n      return _objectSpread({}, prev, _defineProperty({}, e.target.id, e.target.value));\n    });\n    setStatus({\n      submitted: false,\n      submitting: false,\n      info: {\n        error: false,\n        msg: null\n      }\n    });\n  };\n\n  var handleOnSubmit = function handleOnSubmit(e) {\n    var res, text;\n    return _regeneratorRuntime.async(function handleOnSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            e.preventDefault();\n            setStatus(function (prevStatus) {\n              return _objectSpread({}, prevStatus, {\n                submitting: true\n              });\n            });\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetch('/api/send', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(inputs)\n            }));\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(res.text());\n\n          case 7:\n            text = _context.sent;\n            handleResponse(res.status, text);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return __jsx(\"main\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Email\"), __jsx(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    onChange: handleOnChange,\n    required: true,\n    value: inputs.email,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Message\"), __jsx(\"textarea\", {\n    id: \"message\",\n    onChange: handleOnChange,\n    required: true,\n    value: inputs.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    disabled: status.submitting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, !status.submitting ? !status.submitted ? 'Submit' : 'Submitted' : 'Submitting...')), status.info.error && __jsx(\"div\", {\n    className: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Error: \", status.info.msg), !status.info.error && status.info.msg && __jsx(\"div\", {\n    className: \"success\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, status.info.msg));\n});","map":{"version":3,"sources":["C:/Users/Juan/Desktop/Proyectos/Thools/ThoolsMailAPI/pages/index.js"],"names":["React","useState","submitted","submitting","info","error","msg","status","setStatus","email","message","inputs","setInputs","handleResponse","handleOnChange","e","persist","prev","target","id","value","handleOnSubmit","preventDefault","prevStatus","fetch","method","headers","body","JSON","stringify","res","text"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport default () => {\r\n  const [status, setStatus] = useState({\r\n    submitted: false,\r\n    submitting: false,\r\n    info: { error: false, msg: null }\r\n  })\r\n\r\n  const [inputs, setInputs] = useState({\r\n    email: '',\r\n    message: ''\r\n  })\r\n\r\n  const handleResponse = (status, msg) => {\r\n    if (status === 200) {\r\n      setStatus({\r\n        submitted: true,\r\n        submitting: false,\r\n        info: { error: false, msg: msg }\r\n      })\r\n      setInputs({\r\n        email: '',\r\n        message: ''\r\n      })\r\n    } else {\r\n      setStatus({\r\n        info: { error: true, msg: msg }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleOnChange = e => {\r\n    e.persist()\r\n    setInputs(prev => ({\r\n      ...prev,\r\n      [e.target.id]: e.target.value\r\n    }))\r\n    setStatus({\r\n      submitted: false,\r\n      submitting: false,\r\n      info: { error: false, msg: null }\r\n    })\r\n  }\r\n\r\n  const handleOnSubmit = async e => {\r\n    e.preventDefault()\r\n    setStatus(prevStatus => ({ ...prevStatus, submitting: true }))\r\n    const res = await fetch('/api/send', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(inputs)\r\n    })\r\n    const text = await res.text()\r\n    handleResponse(res.status, text)\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      <form onSubmit={handleOnSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          id=\"email\"\r\n          type=\"email\"\r\n          onChange={handleOnChange}\r\n          required\r\n          value={inputs.email}\r\n        />\r\n        <label htmlFor=\"message\">Message</label>\r\n        <textarea\r\n          id=\"message\"\r\n          onChange={handleOnChange}\r\n          required\r\n          value={inputs.message}\r\n        />\r\n        <button type=\"submit\" disabled={status.submitting}>\r\n          {!status.submitting\r\n            ? !status.submitted\r\n              ? 'Submit'\r\n              : 'Submitted'\r\n            : 'Submitting...'}\r\n        </button>\r\n      </form>\r\n      {status.info.error && (\r\n        <div className=\"error\">Error: {status.info.msg}</div>\r\n      )}\r\n      {!status.info.error && status.info.msg && (\r\n        <div className=\"success\">{status.info.msg}</div>\r\n      )}\r\n    </main>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}